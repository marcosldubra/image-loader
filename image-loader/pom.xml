<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
  					http://maven.apache.org/xsd/maven-4.0.0.xsd">
  
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.javaee.image-loader</groupId>
	<artifactId>image-loader</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>${project.artifactId} Project</name>
	
	<properties>
		<dataSource.user>imageLoader</dataSource.user>
        <dataSource.password>12345</dataSource.password>
        <dataSource.jndiName>jdbc/imageLoaderDS</dataSource.jndiName>
        <dataSource.createTablesScript>SQLCreateTables.sql</dataSource.createTablesScript>
        <testDataSource.user>${dataSource.user}</testDataSource.user>
        <testDataSource.password>${dataSource.password}</testDataSource.password>

        <hibernate.show_sql>true</hibernate.show_sql>
        <hibernate.format_sql>true</hibernate.format_sql>
        <hibernate.use_sql_comments>true</hibernate.use_sql_comments>
        
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
		<junit.version>4.12</junit.version>
		<slf4j.version>1.7.12</slf4j.version>
        <javassist.version>3.19.0-GA</javassist.version>
        <cglib.version>3.1</cglib.version>
        <hibernate.version>4.3.8.Final</hibernate.version>
        <spring.version>4.1.6.RELEASE</spring.version>
        <tapestry.version>5.3.8</tapestry.version>
        <tapestry-bootstrap.version>2.1.3</tapestry-bootstrap.version>
        
        <!-- Plugin versions -->
        <mavenCompilerPlugin.version>3.3</mavenCompilerPlugin.version>
        <mavenResourcesPlugin.version>2.7</mavenResourcesPlugin.version>
        <sqlMavenPlugin.version>1.5</sqlMavenPlugin.version>
        <mavenAssemblyPlugin.version>2.5.3</mavenAssemblyPlugin.version>
        <jettyMavenPlugin.version>8.1.16.v20140903</jettyMavenPlugin.version>
	</properties>

	<profiles>
        <profile>
            <id>mysql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- JDBC driver properties -->
                <jdbcDriver.groupId>mysql</jdbcDriver.groupId>
                <jdbcDriver.artifactId>mysql-connector-java</jdbcDriver.artifactId>
                <jdbcDriver.version>5.1.38</jdbcDriver.version>
                <jdbcDriver.className>com.mysql.jdbc.Driver</jdbcDriver.className>

                <!--  Data source properties -->
                <dataSource.url>jdbc:mysql://localhost/imageLoader</dataSource.url>
                <testDataSource.url>${dataSource.url}Test</testDataSource.url>

                <!-- Hibernate properties -->
                <hibernate.dialect>org.hibernate.dialect.MySQLDialect</hibernate.dialect>
            </properties>
        </profile>
    </profiles>
    
	<dependencies>
		<dependency>
            <groupId>${jdbcDriver.groupId}</groupId>
            <artifactId>${jdbcDriver.artifactId}</artifactId>
            <version>${jdbcDriver.version}</version>
            <scope>test</scope>
        </dependency>
        
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
	      	<version>${junit.version}</version>
	      	<scope>test</scope>
		</dependency>
    
    	<dependency>
    		<groupId>org.javaee</groupId>
    		<artifactId>modelUtil</artifactId>
    		<version>1.0</version>
    	</dependency>
    
    	<dependency>
    		<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>${slf4j.version}</version>
			<scope>runtime</scope>
      	</dependency>

		<dependency>
			<groupId>org.javassist</groupId>
			<artifactId>javassist</artifactId>
			<version>3.19.0-GA</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>
        
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		
		<dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-spring</artifactId>
            <version>${tapestry.version}</version>
        </dependency>
		
		<dependency>
    		<groupId>org.apache.tapestry</groupId>
    		<artifactId>tapestry-upload</artifactId>
    		<version>${tapestry.version}</version>
		</dependency>
		
	</dependencies>
  
        
	<build>
        <finalName>${project.artifactId}</finalName>
        
        <!-- =============================================================== -->
        <!-- Filtering -->
        <resources>
        	<!--
        		Aplicar filtrado a los archivos que coinciden con 
        		las expresiones en src/main/resources.
            -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>spring-config.xml</include>
                    <include>hibernate-config.xml</include>
                </includes>
            </resource>
            
            <!--
            	Continuamos considerando los recursos 
            	en src/main/resources, pero sin aplicar filtros
            -->
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            
            <resource>
                <directory>src/main/jetty</directory>
                <includes>
                    <include>jetty-env.xml</include>
                </includes>
                <targetPath>../jetty</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        
        <testResources>
	        <!-- Aplicar filtrado a los archivos que coinciden con 
	    		 las expresiones en src/test/resources.
	        -->
	        <testResource>
	            <directory>src/test/resources</directory>
	            <filtering>true</filtering>
	            <includes>
	                <include>spring-config-test.xml</include>
	                <include>hibernate-config-experiments.xml</include>
	            </includes>
	        </testResource>

            <!-- Continuamos considerando los recursos 
            	 en src/main/resources, pero sin aplicar filtros
            -->
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>

        </testResources>
        <!-- pluginManagement úsase cómo unha configuración "global" para os distintos plugins, que despois cada un pode sobreescribir.
        	Define la configuración de plugins que van a heredar los módulos en su construcción.
         -->
        <pluginManagement>
			<plugins>
	        <!-- 
	             Added to avoid problems with the maven plugin for 
				 eclipse
	        -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>sql-maven-plugin</artifactId>
										<versionRange>${sqlMavenPlugin.version}</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		
		<!-- plugins: son invocacións reales dos plugins. Poden ou non ser heredados de un <pluginManagement> -->
		<plugins>

            <!-- ========================================================== -->
            <!-- maven-compiler-plugin úsase para compilar os fuentes do proyecto. 
            	 Desde a versión 3.0 úsase o compilador javax.tools.javaCompiler, pero pódese forzar o uso de javac.
            	 Este plugin ten dous "goals": compiler:compile e compiler:testCompile.
            	Configuración do compilador: 
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${mavenCompilerPlugin.version}</version>
                <configuration>
                    <verbose>true</verbose>
                    <source>1.7</source>
                    <target>1.7</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>

            <!-- ========================================================== -->
            <!-- Resources plugin (2.4.x versions do not correctly filter
                 files containing '@' character). 
            	 Manexa a copia de arhcivos fuente do proxecto os directorios de salida.     
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${mavenResourcesPlugin.version}</version>
            </plugin>

            <!-- ========================================================== -->
            <!-- Setting SQL Plugin -->
            <!--
                 - Configuartion specifies onError="continue" since SQL scripts
                   try to drop tables before creating them (which causes errors
                   if such tables do not exist yet).

                 - Configuartion specifies autocommit="true" since some drivers
                   (e.g the PostgreSQL JDBC 2 driver) do not commit changes if
                   some error ocurrs.
                   
                   Úsase para xestionar "goals" referentes á base de datos.
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>${sqlMavenPlugin.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>${jdbcDriver.groupId}</groupId>
                        <artifactId>${jdbcDriver.artifactId}</artifactId>
                        <version>${jdbcDriver.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${jdbcDriver.className}</driver>
                    <url>${dataSource.url}</url>
                    <username>${dataSource.user}</username>
                    <password>${dataSource.password}</password>
                    <autocommit>true</autocommit>
                    <onError>continue</onError>
                    <orderFile>ascending</orderFile> 
                    <fileset>
                        <basedir>${basedir}</basedir>
                        <includes>
                            <include>src/sql/${dataSource.createTablesScript}</include>
                        </includes>
                    </fileset>
                </configuration>
                <executions>
                    <execution>
                        <id>create-tables-for-testing</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <driver>${jdbcDriver.className}</driver>
                            <url>${testDataSource.url}</url>
                            <username>${testDataSource.user}</username>
                            <password>${testDataSource.password}</password>
                            <autocommit>true</autocommit>
                            <onError>continue</onError>
                            <fileset>
                                <basedir>${basedir}</basedir>
                                <includes>
                                    <include>src/sql/${dataSource.createTablesScript}Test</include>
                                </includes>
                            </fileset>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- ========================================================== -->
            <!-- Assembly configuration 
            	 Emprégase para o empaquetado de aplicacións (non sólo aplicacións web).	
        	-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>${mavenAssemblyPlugin.version}</version>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
            </plugin>

			<plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jettyMavenPlugin.version}</version>

                <configuration>
                    <webAppConfig>
                      <contextPath>/${project.artifactId}</contextPath>
                        <jettyEnvXml>target/jetty/jetty-env.xml</jettyEnvXml>
                    </webAppConfig>
                    <reload>manual</reload>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>9090</port>
                        </connector>
                    </connectors>
                </configuration>

                <dependencies>
                    <dependency>
                        <groupId>${jdbcDriver.groupId}</groupId>
                        <artifactId>${jdbcDriver.artifactId}</artifactId>
                        <version>${jdbcDriver.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jdbc</artifactId>
                        <version>${spring.version}</version>
                        <scope>runtime</scope>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
